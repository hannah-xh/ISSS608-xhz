{
  "hash": "935eb4207cf6378c6ce63fbbba882f13",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ship Performance Visualization\"\nauthor: \"Xiaohan Zhang\"\ndate: \"February 16-2025\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n![](images/clipboard-2644673784.png)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install and load required packages\npacman::p_load(ggplot2, tidyverse)\n\n# Load libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(ggridges)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install and load required packages\npacman::p_load(ggplot2, tidyverse)\n\n# Load libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(ggridges)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the dataset\nship_data <- read_csv(\"data/Ship_Performance_Dataset.csv\")\n\n# Glimpse of the dataset\nglimpse(ship_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,736\nColumns: 18\n$ Date                    <date> 2023-06-04, 2023-06-11, 2023-06-18, 2023-06-2…\n$ Ship_Type               <chr> \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              <chr> \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             <chr> \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      <chr> \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots <dbl> 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         <dbl> 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    <dbl> 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            <dbl> 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       <chr> \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    <dbl> 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  <dbl> 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   <dbl> 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   <dbl> 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   <dbl> 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     <dbl> 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage <dbl> 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data cleaning and preparation\nship_data_clean <- ship_data %>%\n  mutate(\n    Year = year(Date),\n    Month = month(Date),\n    YearMonth = format(Date, \"%Y-%m\"),\n    # Handle \"None\" values\n    across(where(is.character), ~na_if(., \"None\")),\n    Profit_USD = Revenue_per_Voyage_USD - Operational_Cost_USD\n  ) %>%\n  filter(complete.cases(.))  # Remove rows with NA values\n\n# Adding the Profit_Status column and converting it to a factor\nship_data_clean <- ship_data_clean %>%\n  mutate(Profit_Status = ifelse(Profit_USD >= 0, \"Profitable\", \"Loss\")) %>%\n  mutate(Profit_Status = as.factor(Profit_Status))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Time Series Analysis\ntime_analysis <- ship_data_clean %>%\n  group_by(YearMonth) %>%\n  summarise(\n    Average_Revenue = mean(Revenue_per_Voyage_USD, na.rm = TRUE),\n    Average_Cost = mean(Operational_Cost_USD, na.rm = TRUE),\n    Voyage_Count = n()\n  ) %>%\n  pivot_longer(cols = c(Average_Revenue, Average_Cost),\n               names_to = \"Metric\",\n               values_to = \"Amount\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Custom theme definition\ntheme_custom <- theme_minimal() +\n  theme(\n    plot.title = element_text(size = 10, face = \"bold\", margin = margin(b = 10)),\n    plot.subtitle = element_text(size = 10, color = \"grey50\"),\n    axis.title = element_text(size = 9),\n    axis.text = element_text(size = 7),\n    legend.position = \"right\",\n    legend.title = element_text(size = 9),\n    legend.text = element_text(size = 7),\n    panel.grid.major = element_line(color = \"grey90\"),\n    panel.grid.minor = element_blank()\n  )\n\n# Color palettes\npalette_main <- c(\"#7CB9E8\", \"#B8B8FF\", \"#FFE5B4\", \"#0077BE\", \"#6F00FF\", \"#FFD700\")\npalette_status <- c(\"Profitable\" = \"#7CB9E8\", \"Loss\" = \"#FFB6C1\")\n\n# Time Series Analysis Plot\nggplot(time_analysis, aes(x = YearMonth, y = Amount, color = Metric, group = Metric)) +\n  geom_line(size = 1) +\n  geom_point(size = 1) +\n  theme_custom +\n  scale_color_manual(values = c(\"Average_Revenue\" = \"#7CB9E8\", \"Average_Cost\" = \"#FFB6C1\")) +\n  labs(\n    title = \"Revenue and Cost Trends Over Time\",\n    subtitle = \"Monthly Average Comparison\",\n    x = \"Year-Month\",\n    y = \"Amount (USD)\"\n  ) +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  geom_text(aes(label = scales::dollar(Amount),colour = \"black\"), vjust = -1.5, size = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(ship_data_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,127\nColumns: 23\n$ Date                    <date> 2023-06-11, 2023-06-18, 2023-06-25, 2023-07-0…\n$ Ship_Type               <chr> \"Fish Carrier\", \"Container Ship\", \"Bulk Carrie…\n$ Route_Type              <chr> \"Short-haul\", \"Long-haul\", \"Transoceanic\", \"Tr…\n$ Engine_Type             <chr> \"Steam Turbine\", \"Diesel\", \"Steam Turbine\", \"D…\n$ Maintenance_Status      <chr> \"Good\", \"Fair\", \"Fair\", \"Fair\", \"Fair\", \"Criti…\n$ Speed_Over_Ground_knots <dbl> 10.38758, 20.74975, 21.05510, 13.74278, 18.616…\n$ Engine_Power_kW         <dbl> 1796.0574, 1648.5567, 915.2618, 1089.7218, 217…\n$ Distance_Traveled_nm    <dbl> 1060.4864, 658.8741, 1126.8225, 1445.2812, 723…\n$ Draft_meters            <dbl> 14.653083, 7.199261, 11.789063, 9.727833, 14.9…\n$ Weather_Condition       <chr> \"Rough\", \"Moderate\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 162.3947, 178.0409, 1737.3853, 260.5951, 1912.…\n$ Operational_Cost_USD    <dbl> 483388.00, 448543.40, 261349.61, 287718.38, 18…\n$ Revenue_per_Voyage_USD  <dbl> 883765.79, 394018.75, 87551.38, 676121.46, 776…\n$ Turnaround_Time_hours   <dbl> 63.24820, 49.41815, 22.40911, 64.15823, 47.476…\n$ Efficiency_nm_per_kWh   <dbl> 0.2903614, 0.4995945, 0.7029057, 1.3313431, 1.…\n$ Seasonal_Impact_Score   <dbl> 0.8856478, 1.4058132, 1.3707043, 0.5833834, 1.…\n$ Weekly_Voyage_Count     <dbl> 6, 9, 1, 8, 7, 3, 6, 2, 9, 4, 3, 7, 7, 2, 4, 3…\n$ Average_Load_Percentage <dbl> 93.89537, 96.21824, 66.19370, 80.00858, 53.174…\n$ Year                    <dbl> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023…\n$ Month                   <dbl> 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 10, …\n$ YearMonth               <chr> \"2023-06\", \"2023-06\", \"2023-06\", \"2023-07\", \"2…\n$ Profit_USD              <dbl> 400377.79, -54524.66, -173798.23, 388403.08, 5…\n$ Profit_Status           <fct> Profitable, Loss, Loss, Profitable, Profitable…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Profit/Loss Analysis by Ship Type\nggplot(ship_data_clean, aes(x = Ship_Type, fill = Profit_Status)) +\n  geom_bar(position = \"fill\") +\n  scale_fill_manual(values = palette_status) +\n  theme_custom +\n  labs(\n    title = \"Profit/Loss Distribution by Ship Type\",\n    subtitle = \"Proportion of Profitable vs Loss-making Voyages\",\n    x = \"Ship Type\",\n    y = \"Proportion\",\n    fill = \"Profit Status\"\n  ) +\n  scale_y_continuous(labels = scales::percent_format()) +\n  geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.., sum)[..x..])),\n            stat = \"count\",\n            position = position_fill(vjust = 0.5),\n            size = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Profit Distribution by Ship Type\nggplot(ship_data_clean, aes(x = Ship_Type, y = Profit_USD, fill = Profit_Status)) +\n  geom_boxplot() +\n  scale_fill_manual(values = palette_status) +\n  theme_custom +\n  labs(\n    title = \"Profit Distribution by Ship Type\",\n    subtitle = \"Box Plot showing Profit/Loss Ranges\",\n    x = \"Ship Type\",\n    y = \"Profit (USD)\",\n    fill = \"Profit Status\"\n  ) +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  stat_summary(fun = mean, geom = \"point\", shape = 20, size = 2, fill = \"white\") +\n  stat_summary(fun = median, geom = \"text\", aes(label = round(..y.., 0)), vjust = -0.5, color = \"black\", size = 2) # Adjusted size for median label\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Profit Distribution by Engine Type\nggplot(ship_data_clean, aes(x = Engine_Type, y = Profit_USD, fill = Profit_Status)) +\n  geom_boxplot() +\n  scale_fill_manual(values = palette_status) +\n  theme_custom +\n  labs(\n    title = \"Profit Distribution by Engine Type\",\n    subtitle = \"Box Plot Analysis of Engine Performance\",\n    x = \"Engine Type\",\n    y = \"Profit (USD)\",\n    fill = \"Profit Status\"\n  ) +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  stat_summary(fun = mean, geom = \"point\", shape = 20, size = 2, fill = \"white\") +\n  stat_summary(fun = median, geom = \"text\", aes(label = round(..y.., 0)), vjust = -0.5, color = \"black\", size = 2) # Adjusted size for median label\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Profit Distribution by Route Type\nggplot(ship_data_clean, aes(x = Route_Type, y = Profit_USD, fill = Profit_Status)) +\n  geom_boxplot() +\n  scale_fill_manual(values = palette_status) +\n  theme_custom +\n  labs(\n    title = \"Profit Distribution by Route Type\",\n    subtitle = \"Analysis of Route Profitability\",\n    x = \"Route Type\",\n    y = \"Profit (USD)\",\n    fill = \"Profit Status\"\n  ) +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  stat_summary(fun = mean, geom = \"point\", shape = 20, size = 2, fill = \"white\") +\n  stat_summary(fun = median, geom = \"text\", aes(label = round(..y.., 0)), vjust = -0.5, color = \"black\", size = 2) # Adjusted size for median label\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Profit Distribution by Maintenance Status\nggplot(ship_data_clean, aes(x = Maintenance_Status, y = Profit_USD, fill = Profit_Status)) +\n  geom_boxplot() +\n  scale_fill_manual(values = palette_status) +\n  theme_custom +\n  labs(\n    title = \"Profit Distribution by Maintenance Status\",\n    subtitle = \"Impact of Maintenance on Profitability\",\n    x = \"Maintenance Status\",\n    y = \"Profit (USD)\",\n    fill = \"Profit Status\"\n  ) +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  stat_summary(fun = mean, geom = \"point\", shape = 20, size = 2, fill = \"white\") +\n  stat_summary(fun = median, geom = \"text\", aes(label = round(..y.., 0)), vjust = -0.5, color = \"black\", size = 2) # Adjusted size for median label\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-9-4.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Efficiency Analysis\nggplot(ship_data_clean, aes(x = Efficiency_nm_per_kWh, y = Profit_USD)) +\n  geom_density_2d_filled(alpha = 0.7) +\n  geom_smooth(color = \"white\", se = TRUE) +\n  facet_wrap(~Ship_Type) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"white\") +\n  theme_custom +\n  labs(\n    title = \"Efficiency vs Profit Density by Ship Type\",\n    subtitle = \"Relationship between Efficiency and Profitability\",\n    x = \"Efficiency (nm/kWh)\",\n    y = \"Profit (USD)\"\n  ) +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  scale_fill_viridis_d()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Top Combinations Analysis\ntop_combinations <- ship_data_clean %>%\n  filter(!is.na(Ship_Type), !is.na(Engine_Type), !is.na(Route_Type), !is.na(Maintenance_Status), !is.na(Profit_USD)) %>%\n  group_by(Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%\n  summarise(mean_profit = mean(Profit_USD, na.rm = TRUE), .groups = \"drop\") %>%\n  arrange(desc(mean_profit)) %>%\n  head(15)\n\nggplot(top_combinations, \n       aes(y = reorder(paste(Ship_Type, Engine_Type, Route_Type, Maintenance_Status), mean_profit), \n           x = mean_profit, \n           fill = mean_profit)) +\n  geom_col() +\n  scale_fill_gradient(low = \"#7CB9E8\", high = \"#FFB6CE\") +\n  theme_custom +\n  labs(\n    title = \"Top 15 Most Profitable Combinations\",\n    subtitle = \"Analysis of Ship, Engine, Route, and Maintenance Combinations\",\n    y = \"Combination\",\n    x = \"Average Profit (USD)\",\n    fill = \"Average Profit\"\n  ) +\n  scale_x_continuous(labels = scales::dollar_format())\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Monthly Profit Trends\nggplot(ship_data_clean %>%\n         group_by(YearMonth, Ship_Type) %>%\n         summarise(avg_profit = mean(Profit_USD), .groups = \"drop\"), \n       aes(x = YearMonth, y = avg_profit, color = Ship_Type, group = Ship_Type)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  scale_color_manual(values = palette_main) +\n  theme_custom +\n  labs(\n    title = \"Monthly Profit Trends by Ship Type\",\n    subtitle = \"Average Monthly Profit Performance\",\n    x = \"Year-Month\",\n    y = \"Average Profit (USD)\"\n  ) +\n  scale_y_continuous(labels = scales::dollar_format()) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 安装patchwork包（如果尚未安装）\n# install.packages(\"patchwork\")\n\n# 加载patchwork包\nlibrary(patchwork)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 修改了 vjust 参数以调整标签位置，并将字号设置为 2\np1 <- ggplot(ship_data_clean, aes(x = Maintenance_Status)) +\n  geom_bar(fill = \"#7CB9E8\", color = \"white\") +\n  theme_custom +\n  labs(\n    title = \"Maintenance Status Distribution\",\n    x = \"Maintenance Status\",\n    y = \"Count\"\n  ) +\n  geom_text(stat = 'count', aes(label = ..count..), vjust = 1.5, size = 2)  # 调整 vjust 和 size\n\np2 <- ggplot(ship_data_clean, aes(x = Engine_Type)) +\n  geom_bar(fill = \"#B8B8FF\", color = \"white\") +\n  theme_custom +\n  labs(\n    title = \"Engine Type Distribution\",\n    x = \"Engine Type\",\n    y = \"Count\"\n  ) +\n  geom_text(stat = 'count', aes(label = ..count..), vjust = 1.5, size = 2)  # 调整 vjust 和 size\n\np3 <- ggplot(ship_data_clean, aes(x = Ship_Type)) +\n  geom_bar(fill = \"#FFE5B4\", color = \"white\") +\n  theme_custom +\n  labs(\n    title = \"Ship Type Distribution\",\n    x = \"Ship Type\",\n    y = \"Count\"\n  ) +\n  geom_text(stat = 'count', aes(label = ..count..), vjust = 1.5, size = 2)  # 调整 vjust 和 size\n\np4 <- ggplot(ship_data_clean, aes(x = Route_Type)) +\n  geom_bar(fill = \"#0077BE\", color = \"white\") +\n  theme_custom +\n  labs(\n    title = \"Route Type Distribution\",\n    x = \"Route Type\",\n    y = \"Count\"\n  ) +\n  geom_text(stat = 'count', aes(label = ..count..), vjust = 1.5, size = 2)  # 调整 vjust 和 size\n\n# 使用 patchwork 组合四张图\np1 + p2 + p3 + p4 + \n  plot_layout(ncol = 2)  # 设置布局为2列\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_combinations_freq <- top_combinations %>%\n  gather(key = \"Variable\", value = \"Value\", Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%\n  count(Variable, Value) %>%\n  arrange(desc(n))\n```\n:::\n\n::: {.cell}\n\n:::\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# 计算组合的标准化频次\ntop_combinations <- ship_data_clean %>%\n  filter(!is.na(Ship_Type), !is.na(Engine_Type), !is.na(Route_Type), !is.na(Maintenance_Status), !is.na(Profit_USD)) %>%\n  group_by(Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%\n  summarise(\n    mean_profit = mean(Profit_USD, na.rm = TRUE),\n    freq = n(),\n    .groups = \"drop\"  # 避免分组输出警告\n  ) %>%\n  arrange(desc(mean_profit))\n\n# 计算标准化频次\ntop_combinations <- top_combinations %>%\n  mutate(\n    freq_std = (freq - mean(top_combinations$freq)) / sd(top_combinations$freq)\n  )\n\n# 标准化后的Top15组合\ntop_15_after <- top_combinations %>%\n  arrange(desc(freq_std)) %>%\n  head(15)\n\n# 将所有变量转换为长格式，用于频数的可视化\ntop_combinations_freq_after <- top_15_after %>%\n  gather(key = \"Variable\", value = \"Value\", Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%\n  group_by(Variable, Value) %>%\n  summarise(n = n(), .groups = \"drop\") %>%\n  ungroup()\n\n# 进行标准化频次处理\n# 先将freq_std列按每个组合赋给对应的Value列\ntop_combinations_freq_after <- top_combinations_freq_after %>%\n  mutate(n = case_when(\n    Variable == \"Ship_Type\" ~ top_15_after$freq_std[match(Value, top_15_after$Ship_Type)],\n    Variable == \"Engine_Type\" ~ top_15_after$freq_std[match(Value, top_15_after$Engine_Type)],\n    Variable == \"Route_Type\" ~ top_15_after$freq_std[match(Value, top_15_after$Route_Type)],\n    Variable == \"Maintenance_Status\" ~ top_15_after$freq_std[match(Value, top_15_after$Maintenance_Status)],\n    TRUE ~ NA_real_\n  ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_combinations_freq_after <- top_15_after %>%\n  gather(key = \"Variable\", value = \"Value\", Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%\n  group_by(Variable, Value) %>%\n  summarise(n = n(), .groups = \"drop\") %>%\n  ungroup() %>%\n  mutate(n = case_when(\n    Variable == \"Ship_Type\" ~ top_15_after$freq_std[match(Value, top_15_after$Ship_Type)],\n    Variable == \"Engine_Type\" ~ top_15_after$freq_std[match(Value, top_15_after$Engine_Type)],\n    Variable == \"Route_Type\" ~ top_15_after$freq_std[match(Value, top_15_after$Route_Type)],\n    Variable == \"Maintenance_Status\" ~ top_15_after$freq_std[match(Value, top_15_after$Maintenance_Status)],\n    TRUE ~ NA_real_\n  ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Frequency Analysis of Elements\nggplot(top_combinations_freq, aes(x = reorder(Value, n), y = n, fill = n)) +\n  geom_col() +\n  facet_wrap(~ Variable, scales = \"free_x\", ncol = 2) +\n  scale_fill_gradient(low = \"#7CB9E8\", high = \"#FFB6CE\") +\n  theme_custom +\n  labs(\n    title = \"Frequency of Elements in Top Performing Combinations\",\n    subtitle = \"Analysis of Most Common Elements in Profitable Configurations\",\n    x = \"Element\",\n    y = \"Frequency\",\n    fill = \"Frequency\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  geom_text(aes(label = n), vjust = 1.2, size = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Standardized Frequency Analysis\nggplot(top_combinations_freq_after, aes(x = reorder(Value, n), y = n, fill = n)) +\n  geom_col() +\n  facet_wrap(~ Variable, scales = \"free_x\", ncol = 2) +\n  scale_fill_gradient(low = \"#7CB9E8\", high = \"#FFB6C1\") +\n  theme_custom +\n  labs(\n    title = \"Standardized Frequency Analysis of Top Combinations\",\n    subtitle = \"Distribution of Elements in Most Frequent Combinations\",\n    x = \"Element\",\n    y = \"Standardized Frequency\",\n    fill = \"Standardized Frequency\"\n  ) +\n  geom_text(aes(label = round(n, 2)), vjust = 2, size = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Additional Analysis: Efficiency Distribution\nggplot(ship_data_clean, aes(x = Ship_Type, y = Efficiency_nm_per_kWh, fill = Ship_Type)) +\n  geom_violin(alpha = 0.7) +\n  geom_boxplot(width = 0.2, alpha = 0.7) +\n  scale_fill_manual(values = palette_main) +\n  theme_custom +\n  labs(\n    title = \"Efficiency Distribution by Ship Type\",\n    subtitle = \"Violin Plot with Embedded Box Plot\",\n    x = \"Ship Type\",\n    y = \"Efficiency (nm/kWh)\"\n  ) +\n  theme(legend.position = \"none\") +\n  stat_summary(fun = mean, geom = \"point\", shape = 20, size = 2, fill = \"white\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1--最终版-0.5-美化_files/figure-html/unnamed-chunk-19-3.png){width=672}\n:::\n:::",
    "supporting": [
      "Take-home_Ex1--最终版-0.5-美化_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}