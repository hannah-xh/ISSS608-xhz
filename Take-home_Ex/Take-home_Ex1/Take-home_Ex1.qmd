---
title: "Ship Performance Visualization"
author: "Xiaohan Zhang"
date: "February 16-2025"
date-modified: "last-modified"
execute:
  echo: true
  eval: true
  warning: false
  freeze: true
---

![](images/clipboard-188576035.png)

# 1. Overview

## 1.1 Background

An international media company plans to publish an article on ship performance. My role as the Graphical Editor is to design insightful visualizations.

## 1.2 Dataset Description

The [Ship Performance Dataset](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset) contains maritime operational data from ships in the Gulf of Guinea. It consists of 2736 rows and 24 columns, capturing both numerical data (ship speed, engine power, travel distance, costs, revenue, efficiency) and categorical information (ship type, route type, engine type, maintenance status, weather conditions). The dataset is synthetic but designed to realistically represent typical maritime operations data. It's available under a CC BY 4.0 license.

## 1.3 Task Description

Use R (tidyverse + ggplot2) for data cleaning and visualization. Goal: Create 5-10 visualizations and write 150-word analyses for each.

# 2. Environment and Theme Setting

## 2.1 Environment Setting

First, install and load the required R packages.

```{r}
pacman::p_load(ggplot2, tidyverse)

library(ggplot2)
library(dplyr)
library(scales)
library(ggridges)
library(patchwork)
library(tidyr)
```

| **Category** | **Package** | **Description** |
|-----------|-----------|--------------------------------------------------|
| **Data Manipulation** | **dplyr** | Provides a set of functions for data manipulation, including filtering (`filter()`), selecting columns (`select()`), creating new variables (`mutate()`), and summarizing data (`group_by()` + `summarize()`). |
|  | **tidyr** | Helps reshape and clean data, offering functions like `pivot_longer()` and `pivot_wider()` for restructuring data, and `separate()` and `unite()` for splitting and merging columns. |
| **Data Visualization** | **ggplot2** | One of the most powerful visualization packages in R, based on the "grammar of graphics" concept. It supports various chart types such as scatter plots, bar charts, line charts, and more. |
|  | **ggridges** | Extends ggplot2 to create ridge plots, which are useful for visualizing distributions across multiple categories. |
| **Visualization Enhancement** | **scales** | Helps format scales in ggplot2, such as adjusting axis labels, customizing color mapping, and formatting dates/numbers. |
| **Plot Layout Management** | **patchwork** | Allows for the easy combination of multiple ggplot2 plots into a single layout, making comparative visualization easier. |

## 2.2 Theme Setting

Use the following code to customize the theme, which will help reduce workload when beautifying charts later.

```{r}
theme_custom <- theme_minimal() +
  theme(
    plot.title = element_text(size = 10, face = "bold", margin = margin(b = 10)),
    plot.subtitle = element_text(size = 10, color = "grey50"),
    axis.title = element_text(size = 9),
    axis.text = element_text(size = 7),
    legend.position = "right",
    legend.title = element_text(size = 9),
    legend.text = element_text(size = 7),
    panel.grid.major = element_line(color = "grey90"),
    panel.grid.minor = element_blank()
  )

palette_main <- c("#7CB9E8", "#B8B8FF", "#FFE5B4", "#0077BE", "#6F00FF", "#FFD700")
palette_status <- c("Profitable" = "#7CB9E8", "Loss" = "#FFB6C1")
```

# 3. Data Cleaning & Preparation

## 3.1 Load Data

Use **read_csv** to load the data.

```{r}
ship_data <- read_csv("data/Ship_Performance_Dataset.csv")
```

## 3.2 Data Understanding

Use [glimpse()](https://dplyr.tidyverse.org/reference/glimpse.html) to get an initial overview of the data.

```{r}
glimpse(ship_data)
```

The dataset contains shipping operations data with 2,736 rows and 18 columns. It tracks various ship metrics including dates (from June 2023), vessel characteristics (ship types like Container Ships and Fish Carriers), and operational parameters (route types ranging from short-haul to transoceanic). The data includes technical specifications such as engine types (HFO, Steam Turbine, Diesel) and maintenance status.

Performance metrics are recorded through speed (in knots), engine power (kW), distance traveled (nautical miles), and draft (meters). Additional operational data covers weather conditions, cargo weight (tons), costs (USD), revenue per voyage, turnaround time (hours), and efficiency (nm/kWh). The dataset also tracks seasonal impact scores, weekly voyage counts, and average load percentages, providing a comprehensive view of maritime operations. Identify key variables (e.g., ship speed, fuel consumption, voyage distance).

## 3.3 Data Inspection

Next, I will use the following code to check for missing values, duplicates, and outliers.

```{r}
if (any(is.na(ship_data))) {
  print("There are missing values in the data")
} else {
  print("There are no missing values")
}

if (any(duplicated(ship_data))) {
  print("There are duplicate values in the data")
} else {
  print("There are no duplicate values")
}

numeric_columns <- ship_data %>% select(where(is.numeric)) %>% names()
z_scores <- ship_data %>% select(all_of(numeric_columns)) %>% scale() %>% as.data.frame()

outliers <- data.frame()

for (i in 1:length(numeric_columns)) {
  column_name <- numeric_columns[i]
  column_z_scores <- z_scores[, i]
  
  outlier_indices <- which(abs(column_z_scores) > 3)
  
  if (length(outlier_indices) > 0) {
    outliers <- rbind(outliers, 
                     data.frame(
                       Column = column_name,
                       Row_Index = outlier_indices,
                       Z_Score = column_z_scores[outlier_indices],
                       Value = ship_data[[column_name]][outlier_indices]
                     ))
  }
}

if (nrow(outliers) > 0) {
  print("Outliers Detected:")
  print(outliers %>% arrange(Column, desc(abs(Z_Score))) %>% group_by(Column) %>% slice_head(n = 5))
} else {
  print("No Outliers Detected")
}
```

After checking, we found that the dataset has no missing values, duplicates, or outliers. However, from the previous step, we observed the presence of "None" in the dataset.

Therefore, we will further investigate the occurrences of "None."

```{r}
none_counts <- ship_data %>%
  select(where(is.character)) %>%  # Only select character columns
  summarise(across(everything(), ~ sum(. == "None", na.rm = TRUE))) %>%
  pivot_longer(cols = everything(), names_to = "Variable", values_to = "Count") %>%
  filter(Count > 0)  

print(none_counts)

```

We found that 136 records contain `"None"` values in certain variables, suggesting that these might be misclassified ship data. Since the `"None"` values affect key variables, making these 136 records difficult to categorize, and correcting them is challenging, removing them can improve analytical accuracy.

Additionally, as only 136 records are affected, the overall dataset integrity remains largely intact. Therefore, in the subsequent data processing steps, we will directly filter out these 136 records.

## 3.4 Encoding Data

Perform the following four data processing steps:

**Remove rows containing `"None"`**: Clean the dataset by eliminating records that cannot be classified or have missing values. **Create time-related features and a profit variable**: Extract year, month, and year-month information, and calculate the profit for each voyage. **Delete rows with missing values**: Ensure that the dataset contains only complete records. **Add a profit status column and convert it to a factor**: Determine whether a ship is profitable based on its profit value and convert the result into a factor type for easier analysis.

```{r}
ship_data_clean <- ship_data %>%
  filter(
    !if_any(where(is.character), ~ . == "None")  # Filter out rows where any character column has "None"
  ) %>%
  mutate(
    Year = year(Date),
    Month = month(Date),
    YearMonth = format(Date, "%Y-%m"),
    Profit_USD = Revenue_per_Voyage_USD - Operational_Cost_USD
  ) %>%
  filter(complete.cases(.))  # Remove rows with NA values

ship_data_clean <- ship_data_clean %>%
  mutate(Profit_Status = ifelse(Profit_USD >= 0, "Profitable", "Loss")) %>%
  mutate(Profit_Status = as.factor(Profit_Status))

```

# 4. Visualization Strategy

Based on the dataset, here are potential analysis directions:

**Trend Analysis → Line Graph (Time Series Chart)**: Use a time series plot to visualize how the ship's performance changes over time, helping to identify long-term trends or cyclical fluctuations. **Distribution Visualization → Histogram, Density Plot**: These can be used to show the distribution of the data, helping to understand the central tendency and variability. **Category Comparison → Box Plot, Violin Plot**: These plots allow for comparisons between different categories, highlighting differences in distributions or key metrics across groups. **Relationship Analysis → Scatter Plot with Regression Line**: Use scatter plots to analyze relationships between two variables, helping to uncover potential correlations or trends.

**Note**: Since the data represents individual voyage records, for example, different types of ships might have varying frequencies in the dataset. It’s important to avoid assuming that the initial data quantities for each category (e.g., ship type) are the same. This is crucial to prevent Simpson’s Paradox from affecting the analysis.

# 5. Exploratory Data Analysis (EDA)

## 5.1 Distribution Analysis

We will first perform a quantitative distribution visualization analysis on the categorical variables in the dataset.

```{r}
p1 <- ggplot(ship_data_clean, aes(x = Maintenance_Status)) +
  geom_bar(fill = "#7CB9E8", color = "white") +
  theme_custom +
  labs(
    title = "Maintenance Status Distribution",
    x = "Maintenance Status",
    y = "Count"
  ) +
  geom_text(stat = 'count', aes(label = ..count..), vjust = 1.5, size = 2)  

p2 <- ggplot(ship_data_clean, aes(x = Engine_Type)) +
  geom_bar(fill = "#B8B8FF", color = "white") +
  theme_custom +
  labs(
    title = "Engine Type Distribution",
    x = "Engine Type",
    y = "Count"
  ) +
  geom_text(stat = 'count', aes(label = ..count..), vjust = 1.5, size = 2) 

p3 <- ggplot(ship_data_clean, aes(x = Ship_Type)) +
  geom_bar(fill = "#FFE5B4", color = "white") +
  theme_custom +
  labs(
    title = "Ship Type Distribution",
    x = "Ship Type",
    y = "Count"
  ) +
  geom_text(stat = 'count', aes(label = ..count..), vjust = 1.5, size = 2)  

p4 <- ggplot(ship_data_clean, aes(x = Route_Type)) +
  geom_bar(fill = "#0077BE", color = "white") +
  theme_custom +
  labs(
    title = "Route Type Distribution",
    x = "Route Type",
    y = "Count"
  ) +
  geom_text(stat = 'count', aes(label = ..count..), vjust = 1.5, size = 2)  

p1 + p2 + p3 + p4 + 
  plot_layout(ncol = 2) 

```

Here's a concise analysis of the shipping fleet data shown in the four distribution charts (148 words):

The data reveals interesting patterns across maintenance status, engine types, ship types, and route types:

Maintenance Status shows an almost even distribution, with Critical (716), Fair (713), and Good (698) conditions having similar counts. This suggests consistent wear patterns across the fleet but also indicates that about one-third of vessels require urgent attention.

Engine Type distribution is also relatively balanced between Diesel (721), Heavy Fuel Oil (702), and Steam Turbine (704) engines, showing no strong preference for any particular propulsion technology.

Ship Type distribution is remarkably uniform across Bulk Carrier (550), Container Ship (524), Fish Carrier (521), and Tanker (532), indicating a well-diversified fleet composition.

Route Type shows some variation, with Long-haul (556) and Coastal (533) routes being more common, while Short-haul (513) and Transoceanic (518) routes are slightly less frequent. This suggests a focus on both regional and long-distance shipping operations.

## 5.2 Time Series Analysis

First, let's take a look at how income and cost change over time.

```{r}
time_analysis <- ship_data_clean %>%
  group_by(YearMonth) %>%
  summarise(
    Average_Revenue = mean(Revenue_per_Voyage_USD, na.rm = TRUE),
    Average_Cost = mean(Operational_Cost_USD, na.rm = TRUE),
    Voyage_Count = n()
  ) %>%
  pivot_longer(cols = c(Average_Revenue, Average_Cost),
               names_to = "Metric",
               values_to = "Amount")

ggplot(time_analysis, aes(x = YearMonth, y = Amount, color = Metric, group = Metric)) +
  geom_line(linewidth = 1) +
  geom_point(size = 1) +
  theme_custom +
  scale_color_manual(values = c("Average_Revenue" = "#7CB9E8", "Average_Cost" = "#FFB6C1")) +
  labs(
    title = "Revenue and Cost Trends Over Time",
    subtitle = "Monthly Average Comparison",
    x = "Year-Month",
    y = "Amount (USD)"
  ) +
  scale_y_continuous(labels = scales::dollar_format()) +
  geom_text(aes(label = scales::dollar(Amount),colour = "black"), vjust = -1.5, size = 2)
```

Revenue (blue line) has experienced significant fluctuations, with peaks around \$551,000 in February-March 2024 and lows near \$489,000 in December 2023. The overall trend shows a slight decline from early 2024 to June 2024. Costs (pink line) have remained relatively stable, ranging between \$235,000-\$285,000, with a notable spike in October 2023 at approximately \$285,000. The gap between revenue and costs (profit margin) was largest in February-March 2024 and smallest in December 2023, indicating varying business performance throughout the year. Despite fluctuations, both revenue and costs show a general stabilizing trend in the most recent months of 2024.

Next, let's examine the time series variation of profit across different ship types.

```{r}
ggplot(ship_data_clean %>%
         group_by(YearMonth, Ship_Type) %>%
         summarise(avg_profit = mean(Profit_USD), .groups = "drop"), 
       aes(x = YearMonth, y = avg_profit, color = Ship_Type, group = Ship_Type)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  scale_color_manual(values = palette_main) +
  theme_custom +
  labs(
    title = "Monthly Profit Trends by Ship Type",
    subtitle = "Average Monthly Profit Performance",
    x = "Year-Month",
    y = "Average Profit (USD)"
  ) +
  scale_y_continuous(labels = scales::dollar_format()) 
```

This line graph displays monthly profit trends for four different ship types from June 2023 to June 2024. Key insights:

Market Volatility: Bulk Carriers offer the highest profit potential but also the greatest risk, suggesting they're best for risk-tolerant investors. Their dramatic swings (\$150K to \$400K) indicate high market sensitivity. Stable Returns: Fish Carriers consistently perform around \$250K-\$300K, making them the most reliable choice for stable returns. Market Recovery: After a collective downturn in late 2023, all ship types showed recovery in early 2024, indicating overall market improvement. Seasonal Patterns: Container Ships and Fish Carriers show opposing cycles, suggesting a potential diversification strategy to balance portfolio risks.

## 5.3 Profit Analysis

In this step, we will analyze profit to explore trends or patterns related to profit.

### Profit Distribution Analysis

```{r}
ggplot(ship_data_clean, aes(x = Ship_Type, y = Profit_USD, fill = Profit_Status)) +
  geom_violin(aes(fill = Profit_Status),
              adjust = 1.2, 
              trim = FALSE, 
              alpha = 0.5) +
  
  geom_point(aes(x = Ship_Type, y = Profit_USD, colour = Profit_Status),
             position = position_jitter(width = .05), size = 0.25, shape = 20) +

  geom_boxplot(outlier.shape = NA, alpha = 0.5, width = 0.1, colour = "black") +
  
  scale_fill_manual(values = palette_status) +
  scale_color_manual(values = palette_status) +
  
  theme_custom +

  labs(
    title = "Profit Distribution by Ship Type",
    subtitle = "Box Plot showing Profit/Loss Ranges",
    x = "Ship Type",
    y = "Profit (USD)",
    fill = "Profit Status"
  ) +
  
  scale_y_continuous(labels = scales::dollar_format()) +
  
  stat_summary(fun = median, geom = "label", aes(label = round(..y.., 0)), 
             vjust = -0.2, color = "black", size = 2, 
             label.padding = unit(0.1, "lines"),             
             alpha = 0.6,                         
             label.size = 0)  

ggplot(ship_data_clean, aes(x = Engine_Type, y = Profit_USD, fill = Profit_Status)) +
  geom_violin(aes(fill = Profit_Status),
              adjust = 1.2, 
              trim = FALSE, 
              alpha = 0.5) +
  
  geom_point(aes(x = Engine_Type, y = Profit_USD, colour = Profit_Status),
             position = position_jitter(width = .05), size = 0.25, shape = 20) +
  
  geom_boxplot(outlier.shape = NA, alpha = 0.5, width = 0.1, colour = "black") +
  
  scale_fill_manual(values = palette_status) +
  scale_color_manual(values = palette_status) +
  
  theme_custom +
  
  labs(
    title = "Profit Distribution by Engine Type",
    subtitle = "Box Plot Analysis of Engine Performance",
    x = "Engine Type",
    y = "Profit (USD)",
    fill = "Profit Status"
  ) +
  
  scale_y_continuous(labels = scales::dollar_format()) +
  
  stat_summary(fun = median, geom = "label", aes(label = round(..y.., 0)), 
             vjust = -0.2, color = "black", size = 2, 
             label.padding = unit(0.1, "lines"),             
             alpha = 0.6,                         
             label.size = 0)  

ggplot(ship_data_clean, aes(x = Route_Type, y = Profit_USD, fill = Profit_Status)) +
  geom_violin(aes(fill = Profit_Status),
              adjust = 1.2, 
              trim = FALSE, 
              alpha = 0.5) +
  
  geom_point(aes(x = Route_Type, y = Profit_USD, colour = Profit_Status),
             position = position_jitter(width = .05), size = 0.25, shape = 20) +
  
  geom_boxplot(outlier.shape = NA, alpha = 0.5, width = 0.1, colour = "black") +
  
  scale_fill_manual(values = palette_status) +
  scale_color_manual(values = palette_status) +
  
  theme_custom +
  
  labs(
    title = "Profit Distribution by Route Type",
    subtitle = "Analysis of Route Profitability",
    x = "Route Type",
    y = "Profit (USD)",
    fill = "Profit Status"
  ) +
  
  scale_y_continuous(labels = scales::dollar_format()) +
  
  stat_summary(fun = median, geom = "label", aes(label = round(..y.., 0)), 
             vjust = -0.2, color = "black", size = 2, 
             label.padding = unit(0.1, "lines"),             
             alpha = 0.6,                         
             label.size = 0)  

ggplot(ship_data_clean, aes(x = Maintenance_Status, y = Profit_USD, fill = Profit_Status)) +
  geom_violin(aes(fill = Profit_Status),
              adjust = 1.2, 
              trim = FALSE, 
              alpha = 0.5) +
  
  geom_point(aes(x = Maintenance_Status, y = Profit_USD, colour = Profit_Status),
             position = position_jitter(width = .05), size = 0.25, shape = 20) +
  
  geom_boxplot(outlier.shape = NA, alpha = 0.5, width = 0.1, colour = "black") +
  
  scale_fill_manual(values = palette_status) +
  scale_color_manual(values = palette_status) +
  
  theme_custom +
  
  labs(
    title = "Profit Distribution by Maintenance Status",
    subtitle = "Impact of Maintenance on Profitability",
    x = "Maintenance Status",
    y = "Profit (USD)",
    fill = "Profit Status"
  ) +
  
  scale_y_continuous(labels = scales::dollar_format()) +
  
  stat_summary(fun = median, geom = "label", aes(label = round(..y.., 0)), 
             vjust = -0.2, color = "black", size = 2, 
             label.padding = unit(0.1, "lines"),             
             alpha = 0.6,                         
             label.size = 0)                  
```

This violin/box plot shows profit distribution across four ship types. Key insights:

Risk Profile: All ship types show both profitable (blue) and loss-making (pink) periods, with potential profits generally outweighing losses. The median profit (center line) is consistently around \$300,000-\$350,000 across all types.

Volatility Patterns: - Bulk Carriers show the widest profit distribution, indicating highest volatility - Container Ships have more concentrated profit ranges, suggesting more stable returns - Fish Carriers and Tankers show similar distribution patterns, with moderate volatility

Loss Protection: The loss distributions (pink) are generally smaller than profit distributions (blue), suggesting the shipping industry has better upside potential than downside risk across all vessel types.

Investment Implication: The data suggests Container Ships might be the safest choice for risk-averse investors, while Bulk Carriers offer higher profit potential with greater risk.

This violin/box plot compares profit distributions across three engine types. Key insights:

Performance Similarity: All three engine types (Diesel, HFO, Steam Turbine) show remarkably similar profit distributions, with median profits around \$320,000-\$370,000.

Risk Profile: - All engine types have comparable profit potential, reaching up to \$1,000,000 - Loss risks are also similar, with maximum losses around -\$500,000 - The symmetrical distributions suggest balanced risk-reward ratios

Operational Implications: - Steam Turbine shows slightly higher median profits (\$370,777) - HFO engines demonstrate the most concentrated profit distribution - Diesel engines show marginally wider variation in profitable scenarios

Decision Making: The similar distributions suggest engine choice might be better based on factors like fuel costs and maintenance requirements rather than profit potential alone.

This violin/box plot compares profit distributions across four shipping routes. Key insights:

Route Performance: - Long-haul routes show highest median profits (\$379,042) - Transoceanic routes follow closely (\$373,077) - Coastal and Short-haul routes show slightly lower medians (\$337,844 and \$364,042)

Risk Assessment: - All routes share similar maximum profit potential (around \$1,000,000) - Loss risks are comparable across routes (around -\$500,000) - Profit distributions are more concentrated in Long-haul and Transoceanic routes

Business Strategy: - Long-haul routes offer best risk-adjusted returns - Coastal routes show widest profit variation, suggesting higher operational uncertainty - Short-haul routes demonstrate balanced risk-reward profile

Investment Recommendation: Focus on Long-haul and Transoceanic routes for optimal profit stability and potential.

This violin/box plot illustrates profit distribution across three maintenance status categories. Key insights:

Maintenance Impact: - 'Good' maintenance status shows lowest median profit (\$336,322) - 'Critical' maintenance shows highest median (\$365,267) - 'Fair' maintenance falls in between (\$357,942)

Counter-intuitive Pattern: - Surprisingly, ships in critical maintenance condition show higher profit potential - This might suggest aggressive operational strategies with deferred maintenance - Could indicate a short-term profit vs. long-term sustainability trade-off

Risk Analysis: - All maintenance states show similar loss potentials (-\$500,000) - Profit distributions are more concentrated in 'Good' maintenance status - 'Critical' status shows wider profit variation, indicating higher operational uncertainty

Strategic Implications: While critical maintenance status shows higher profits, this might not be sustainable long-term and could lead to increased future costs or safety risks.

### 5.4 Profit Analysis under Different Combinations

Next, we will visualize the top 15 combinations with the highest profit in the dataset, further observing which combinations contribute the most to profit.

The following code is used to calculate the combination details:

```{r}

top_combinations <- ship_data_clean %>%
  filter(!is.na(Ship_Type), !is.na(Engine_Type), !is.na(Route_Type), !is.na(Maintenance_Status), !is.na(Profit_USD)) %>%
  group_by(Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%
  summarise(mean_profit = mean(Profit_USD, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(mean_profit)) %>%
  head(15)

ggplot(top_combinations, 
       aes(y = reorder(paste(Ship_Type, Engine_Type, Route_Type, Maintenance_Status), mean_profit), 
           x = mean_profit, 
           fill = mean_profit)) +
  geom_col() +
  scale_fill_gradient(low = "#7CB9E8", high = "#FFB6CE") +
  theme_custom +
  labs(
    title = "Top 15 Most Profitable Combinations",
    subtitle = "Analysis of Ship, Engine, Route, and Maintenance Combinations",
    y = "Combination",
    x = "Average Profit (USD)",
    fill = "Average Profit"
  ) +
  scale_x_continuous(labels = scales::dollar_format())

top_combinations_freq <- top_combinations %>%
  gather(key = "Variable", value = "Value", Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%
  count(Variable, Value) %>%
  arrange(desc(n))

```

This horizontal bar chart shows the top 15 most profitable combinations of ship, engine, route, and maintenance status. Key insights:

Top Performers: - Tanker with HFO engine on short-haul routes with fair maintenance leads profitability (\$480,000+) - Fish Carriers with HFO engines on long-haul routes rank second - Container Ships with Steam Turbines on long-haul routes rank third

Pattern Analysis: - HFO engines appear frequently in top combinations - Critical and Fair maintenance statuses dominate the top spots - Short-haul and Long-haul routes are more common in top performers

Key Combinations: - Fish Carriers show strong performance across different configurations - Container Ships appear in multiple top combinations - Fair maintenance status appears more often in highest-profit combinations

Strategic Implications: The data suggests focusing on HFO engines, particularly for Tankers and Fish Carriers, while maintaining Fair maintenance standards rather than Good or Critical.

Next, we will explore the occurrences of these four categories in the top 15 profit-generating combinations. Since the data volumes for these four categories are not the same, we need to standardize the frequency counts.

```{r}

top_combinations <- ship_data_clean %>%
  filter(!is.na(Ship_Type), !is.na(Engine_Type), !is.na(Route_Type), !is.na(Maintenance_Status), !is.na(Profit_USD)) %>%
  group_by(Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%
  summarise(
    mean_profit = mean(Profit_USD, na.rm = TRUE),
    freq = n(),
    .groups = "drop"  
  ) %>%
  arrange(desc(mean_profit))

top_combinations <- top_combinations %>%
  mutate(
    freq_std = (freq - mean(top_combinations$freq)) / sd(top_combinations$freq)
  )

top_15_after <- top_combinations %>%
  arrange(desc(freq_std)) %>%
  head(15)

top_combinations_freq_after <- top_15_after %>%
  gather(key = "Variable", value = "Value", Ship_Type, Engine_Type, Route_Type, Maintenance_Status) %>%
  group_by(Variable, Value) %>%
  summarise(n = n(), .groups = "drop") %>%
  ungroup()

top_combinations_freq_after <- top_combinations_freq_after %>%
  mutate(n = case_when(
    Variable == "Ship_Type" ~ top_15_after$freq_std[match(Value, top_15_after$Ship_Type)],
    Variable == "Engine_Type" ~ top_15_after$freq_std[match(Value, top_15_after$Engine_Type)],
    Variable == "Route_Type" ~ top_15_after$freq_std[match(Value, top_15_after$Route_Type)],
    Variable == "Maintenance_Status" ~ top_15_after$freq_std[match(Value, top_15_after$Maintenance_Status)],
    TRUE ~ NA_real_
  ))
```

Next, we will visualize and compare the occurrences before and after standardization.

```{r}

top_combinations_freq$type <- "Frequency"
top_combinations_freq_after$type <- "Standardized Frequency"

combined_data <- bind_rows(top_combinations_freq, top_combinations_freq_after)

p <- ggplot(combined_data, aes(x = reorder(Value, n), y = n, fill = n)) +
  geom_col() +
  facet_grid(type ~ Variable, scales = "free_x") + 
  scale_fill_gradient(low = "#7CB9E8", high = "#FFB6C1") +
  theme_minimal() +  
  labs(
    title = "Comparison of Frequency and Standardized Frequency in Top 15 Combinations",
    x = "Element",
    y = "Count",
    fill = "Value"
  ) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    strip.text = element_text(face = "bold")
  ) +
  geom_text(aes(label = round(n, 2)), vjust = 1, size = 2)

print(p)
```

This chart compares actual frequency (top) and standardized frequency (bottom) across different categories of shipping operations. Here's a brief analysis (145 words):

Heavy Fuel Oil (HFO) engines show the highest frequency (7) among engine types, while Steam Turbine has a higher standardized frequency (2.97) compared to Diesel (1.81).

In maintenance status, Critical conditions have the highest frequency (8), though Good and Fair conditions show similar standardized frequencies (around 2.97 and 2.39 respectively).

Route types show balanced actual frequencies (3-4 occurrences each), with Transoceanic routes having a slightly higher standardized frequency (2.97) compared to Coastal routes (1.81).

For ship types, Container Ships and Fish Carriers both show high actual frequencies (5 each), and Fish Carriers maintain the highest standardized frequency (2.97) among all ship types.

The comparison between actual and standardized frequencies helps identify patterns that might not be immediately apparent from raw counts alone, particularly in highlighting the relative importance of different categories when normalized.

## 5.5 Efficiency Analysis

Next, we will perform a visual analysis of the operational efficiency of different types of ships.

```{r}
ggplot(ship_data_clean, aes(x = Efficiency_nm_per_kWh, y = Profit_USD)) +
  geom_density_2d_filled(alpha = 0.7) +
  geom_smooth(color = "white", se = TRUE) +
  facet_wrap(~Ship_Type) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "white") +
  theme_custom +
  labs(
    title = "Efficiency vs Profit Density by Ship Type",
    subtitle = "Relationship between Efficiency and Profitability",
    x = "Efficiency (nm/kWh)",
    y = "Profit (USD)"
  ) +
  scale_y_continuous(labels = scales::dollar_format()) +
  scale_fill_viridis_d()

```

Here's a concise analysis of the efficiency vs. profit density visualization for different ship types in under 150 words:

The visualization shows the relationship between efficiency (nm/kWh) and profit (USD) across four ship types: Bulk Carrier, Container Ship, Fish Carrier, and Tanker. Key insights:

Optimal Efficiency Zones: All ship types show clear "sweet spots" (yellow/light green areas) where profit is maximized at specific efficiency levels, typically between 0.6-1.0 nm/kWh.

Fish Carriers demonstrate the most distinct profit optimization patterns, with multiple high-profit zones across different efficiency levels, suggesting more operational flexibility.

Container Ships and Tankers show more concentrated profit peaks around 0.8 nm/kWh, indicating a narrower optimal operating range.

The white lines (possibly representing average or trend lines) are relatively stable across efficiency ranges, suggesting that dramatic efficiency improvements may not always translate to proportional profit increases.

Bulk Carriers show the most evenly distributed profit patterns, indicating they might be more resilient to efficiency variations. \# 6. Conclusion Based on the comprehensive shipping fleet analysis, here's a detailed logical conclusion:

Operational Efficiency and Profitability Dynamics: - Each ship type has identified optimal efficiency zones (0.6-1.0 nm/kWh), suggesting that operational strategies should focus on maintaining vessels within these ranges - The non-linear relationship between efficiency and profit indicates that pursuing maximum efficiency at all costs may not be economically optimal - Fish Carriers show the most operational flexibility with multiple profit-maximizing efficiency zones, offering strategic advantages in varying market conditions

Fleet Composition and Risk Management: - The current fleet shows remarkable balance across ship types, engine types, and maintenance status, indicating a well-diversified operational strategy - Different ship types offer distinct risk-return profiles: \* Bulk Carriers: Highest profit potential but greatest volatility \* Container Ships: More stable returns with concentrated profit ranges \* Fish Carriers: Consistent performance with reliable returns \* Tankers: Moderate volatility with good profit potential - This diversity creates natural hedging opportunities for fleet operators

Route Optimization: - Long-haul and Transoceanic routes demonstrate superior profit potential and stability - While Coastal routes show wider profit variation, they remain essential for comprehensive market coverage - The balanced distribution across route types suggests a well-structured network that can adapt to market changes

Maintenance and Sustainability Paradox: - The counter-intuitive finding that critical maintenance status correlates with higher short-term profits raises important strategic considerations - This likely represents an unsustainable trade-off between immediate returns and long-term fleet reliability - The similar profit distributions across engine types suggest that maintenance decisions should prioritize long-term sustainability over short-term cost savings

Technology and Engine Strategy: - The similar profit distributions across engine types (Diesel, HFO, Steam Turbine) indicate that engine choice should be based on: \* Fuel availability and costs \* Maintenance requirements \* Environmental regulations \* Operational flexibility - HFO engines appear frequently in top-performing combinations, suggesting potential operational advantages

Strategic Recommendations:

Operational Focus: - Maintain vessels within proven efficiency ranges rather than pursuing maximum efficiency - Develop specific operational guidelines for each ship type based on their unique efficiency-profit relationships - Implement regular monitoring systems to ensure vessels operate within optimal zones

Fleet Management: - Maintain a diversified fleet composition to balance risk and return - Consider increasing the proportion of Container Ships and Fish Carriers for stability - Develop specialized operational strategies for each ship type based on their profit patterns

Route Planning: - Prioritize Long-haul and Transoceanic routes while maintaining sufficient Coastal presence - Develop route optimization strategies that consider both profit potential and operational stability - Consider seasonal patterns in route planning to maximize year-round profitability

Maintenance Strategy: - Resist the temptation to defer maintenance for short-term profit gains - Implement predictive maintenance programs to optimize long-term vessel performance - Develop clear maintenance standards and schedules based on vessel type and route demands

Investment Planning: - Focus investments on vessels and routes with proven profit stability - Consider environmental regulations and future fuel availability in fleet expansion decisions - Maintain a balanced approach to risk and return in fleet development

Sustainability Considerations: - Develop long-term sustainability strategies that balance profit potential with environmental responsibility - Consider future regulatory requirements in fleet modernization plans - Invest in efficient technologies that offer sustainable competitive advantages

This analysis suggests that successful fleet operations require a careful balance of efficiency, risk management, and long-term sustainability. While short-term profit opportunities exist in various operational strategies, sustainable success depends on maintaining well-maintained, efficiently operated vessels across a diversified fleet serving optimized routes.

# 7. References

Primary Dataset: - Ship Performance Dataset (Kaggle) - Link: https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset - License: CC BY 4.0

R Packages Used: - ggplot2: https://ggplot2.tidyverse.org/ - tidyverse: https://www.tidyverse.org/ - dplyr: https://dplyr.tidyverse.org/ - scales: https://scales.r-lib.org/ - ggridges: https://cran.r-project.org/web/packages/ggridges/ - patchwork: https://patchwork.data-imaginist.com/ - tidyr: https://tidyr.tidyverse.org/
